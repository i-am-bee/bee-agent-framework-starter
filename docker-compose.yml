services:
  bee-code-interpreter-k3s:
    profiles:
      - all
      - code_interpreter
    image: "rancher/k3s:v1.30.5-k3s1"
    command: ["server", "--tls-san", "bee-code-interpreter-k3s"]
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    volumes:
      - k3s-containerd:/var/lib/rancher/k3s/agent/containerd
      - ./infra/bee-code-interpreter/k8s:/var/lib/rancher/k3s/server/manifests
      - ${CODE_INTEPRETER_TMPDIR:-./tmp/code_interpreter_target}:/storage
    ports:
      - "50051:30051"
    healthcheck:
      test: "kubectl get po code-interpreter | grep Running"
      interval: 10s
      retries: 10
      start_period: 30s
  mongo:
    profiles:
      - all
      - observe
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    healthcheck:
      test: |
        mongosh --quiet --eval 'db.getSiblingDB("bee-observe").getCollection("span") ? quit(0) : quit(1)' || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    profiles:
      - all
      - observe
    image: redis:7
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
  mlflow:
    profiles:
      - all
      - observe
    image: bitnami/mlflow:2.16.2
    ports:
      - "8080:8080"
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "/entrypoint.sh && mlflow server --app-name basic-auth --host 0.0.0.0 --port 8080",
      ]
    security_opt:
      - "label=disable"
    volumes:
      - ./infra/observe/entrypoint.sh:/entrypoint.sh:ro
  observe_api_migration:
    profiles:
      - all
      - observe
    image: iambeeagent/bee-observe:0.0.3
    entrypoint: "npx mikro-orm migration:up --config ./dist/mikro-orm.config.js"
    env_file:
      - ./infra/observe/.env.docker
    environment:
      - NODE_ENV=production
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
  observe_api:
    profiles:
      - all
      - observe
    image: iambeeagent/bee-observe:0.0.3
    ports:
      - "4002:3000"
    env_file:
      - ./infra/observe/.env.docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:3000/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - observe_api_migration

volumes:
  k3s-containerd:
